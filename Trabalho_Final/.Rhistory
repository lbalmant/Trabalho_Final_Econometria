#Passos iniciais--------
library(tidyverse)
library(geobr)
library(lmtest)
#Passos iniciais--------
library(tidyverse)
library(geobr)
library(lmtest)
Base <- readxl::read_excel("C:/Users/lbalm/OneDrive/Área de Trabalho/Econometria/Dados Trabalho/Dados_PibPerCapitaBrasileiro.xlsx")
view(Base)
Base$`PIB per capita brasileiro` <- Base$`PIB per capita`*1000
Base <- Base %>%
select(-`PIB per capita`)
view(Base)
Base2 <- read.csv2("C:/Users/lbalm/OneDrive/Área de Trabalho/Econometria/Dados Trabalho/PibPerCapitaOuroBranco.csv")
view(Base2)
Base2 <- Base2 %>%
select(`PIB per capita ouro branquense` = Produto.Interno.Bruto.per.capita, everything())
Base2 <- Base2 %>%
select(`Ano`, everything())
View(Base2)
Base <- Base %>%
select(`Ano` = `Data`, everything())
base_final <- left_join(x = Base, y = Base2, by = "Ano")
library(tidyr)
library(dplyr)
base_final <- base_final %>%
mutate(`PIB per capita ouro branquense` = replace_na(`PIB per capita ouro branquense`, 0))
base_final <- base_final %>%
filter(`PIB per capita ouro branquense` != 0)
view(base_final)
modelo <- lm(`PIB per capita ouro branquense` ~  `PIB per capita brasileiro`, data = base_final)
summary(modelo)
novabase <- readxl::read_xlsx("C:/Users/lbalm/OneDrive/Área de Trabalho/Econometria/Dados Trabalho/NovaBase2.xlsx")
View(novabase)
novabase <- novabase %>%
filter(`Valor Adicionado - industria de transformacao` != 0)
base_final <- left_join(x = base_final, y = novabase, by = "Ano")
grafTemp <- lm(`PIB per capita ouro branquense`~ `Valor Adicionado - industria de transformacao`,
data = base_final)
summary(grafTemp)
library(ggplot2)
ggplot(base_final, aes(x = `PIB per capita ouro branquense`, y = `Valor Adicionado - industria de transformacao`)) +
geom_point() +  # Adicionar pontos de dados
geom_smooth(method = "lm", col = "blue") +  # Adicionar linha de tendência linear
labs(title = "Valor Adicionado - IT x PIB per capita - OB (2000 - 2021)",
x = "PIB per capita - Ouro Branco",
y = "Valor Adicionado - Indústria de Transformação") +
scale_y_continuous(labels = scales::comma) +
theme_minimal()
#testando modelo inicial-----
modelo2 <- lm(`PIB per capita ouro branquense` ~  `PIB per capita brasileiro` + `Empregados - industria de transformacao` + `Valor Adicionado - industria de transformacao`, data = base_final)
#View(modelo2)
summary(modelo2)
#testando o ajuste do modelo em relação unicamente ao valor adicionado da industria de transformação
modelo3 <- lm(`PIB per capita ouro branquense` ~  `Valor Adicionado - industria de transformacao`, data = base_final)
summary(modelo3)
#aqui eu alterei o "capital" para "capita" mas reajustei lá em cima - retirar da próxima vez que testar
base_final <- base_final %>%
select(`Ano`, `PIB per capita ouro branquense`, `Valor Adicionado - Industria de transformação` = `Valor Adicionado - industria de transformacao`, everything())
modelo4 <- lm(`PIB per capita ouro branquense` ~  `Valor Adicionado - Industria de transformação` + `Valor Adicionado - administração publica`, data = base_final)
summary(modelo4)
populaçãotot <- read.csv2("C:/Users/lbalm/OneDrive/Área de Trabalho/Econometria/Dados Trabalho/PopulacaoTotalOB.csv")
View(populaçãotot)
base_final <- left_join(x = base_final, y = populaçãotot, by = "Ano")
modelo5 <- lm(`PIB per capita ouro branquense` ~  `Valor Adicionado - Industria de transformação` + `Populacao.total`, data = base_final)
summary(modelo5)
mod5 <- lm(`PIB per capita ouro branquense` ~  `Populacao.total`+`PIB per capita brasileiro`, data = base_final)
summary(mod5)
mod5m <- lm(`PIB per capita ouro branquense` ~  `Populacao.total`+`PIB per capita brasileiro` + `Valor Adicionado - Industria de transformação`+ `Valor Adicionado - administração publica`, data = base_final)
summary(mod5m)
modelo6 <- lm(`PIB per capita ouro branquense` ~ `Valor Adicionado - Industria de transformação` + `Valor Adicionado - agropecuaria` + `Valor Adicionado - administração publica`, data = base_final)
summary(modelo6)
teste <- lm(`PIB per capita ouro branquense` ~ `Valor Adicionado - agropecuaria` + `Valor Adicionado - administração publica`, data = base_final)
summary(teste)
#Esses dados ainda não são de mais anos, são outras coisas para testar no meu modelo
maisdados <-  read.csv2("C:/Users/lbalm/OneDrive/Área de Trabalho/Econometria/Dados Trabalho/Outros_dados_para_teste.csv")
basedeteste <- left_join(x = base_final, y = maisdados, by = "Ano")
View(basedeteste)
maisteste <- lm(`PIB per capita ouro branquense` ~ `Valor Adicionado - Industria de transformação` + `Empregados - extrativa mineral` + `Empregados - industria de transformacao` , data = basedeteste)
summary(maisteste)
#modelo que melhor ajustou até agora --> PEGAR DADOS DE MAIS ANOS!!//peguei
modelofinal <- lm(`PIB per capita ouro branquense` ~   `Valor Adicionado - Industria de transformação` + `Valor Adicionado - administração publica`, data = base_final)
summary(modelofinal)
coeftest(modelofinal, vcov = sandwich::vcovHC(modelofinal, "HC1"))
hetero1 <- coeftest(modelofinal,vcoc. = vcovHC,type = "HC1")
hetero1
#Modelo para mostrar a não influência do crescimento do PIB brasileiro no Ouro Branquense
mdoelonaobrasil <- lm(`PIB per capita ouro branquense` ~ `PIB per capita brasileiro` + `Valor Adicionado - Industria de transformação`, data = base_final)
summary(mdoelonaobrasil)
hetero <- coeftest(mdoelonaobrasil,vcoc. = vcovHC,type = "HC1")
hetero #corrigido heterocedasticidade
#visualizando graficamente-----------
install.packages('nortest')
install.packages('car')
library(car)
library(nortest)
#Eu tinha começado a fazer isso sem a variável PIB per capita brasileiro
#Adicionando ela consegui uma variabilidade maior no meu plot gráfico mas ainda está muito ruim
#ficou um pouco melhor com a variável do valor adicionado da administração pública
base_final_grafico <- base_final %>%
select(`Ano`, `PIB per capita ouro branquense`, `Valor Adicionado - Industria de transformação`,`Valor Adicionado - administração publica`, `PIB per capita brasileiro`)
graf <-lm(`PIB per capita ouro branquense`~ `Valor Adicionado - Industria de transformação`+`PIB per capita brasileiro`,
data = base_final_grafico)
grafresiduos <- residualPlot(graf,
main = "Plot dos residuos",
x = "Valores ajustados",
y = "resíduos de Pearson")
grafico <- lm(`PIB per capita ouro branquense`~ `Valor Adicionado - Industria de transformação`+`Valor Adicionado - administração publica`,
data = base_final_grafico)
grafresiduos <- residualPlot(grafico,
col = "black",
pch = 19,
main = "Plot dos residuos com ADM",
x = "Valores ajustados",
y = "resíduos de Pearson")
grafsemnd <- lm(`PIB per capita ouro branquense`~ `Valor Adicionado - Industria de transformação`,
data = base_final_grafico)
grafresiduos <- residualPlot(grafsemnd,
col = "black",
pch = 19,
main = "Plot dos residuos sem ADM",
x = "Valores ajustados",
y = "resíduos de Pearson")
residuos <- residuals(lm(`PIB per capita ouro branquense`~`Valor Adicionado - Industria de transformação`+`Valor Adicionado - administração publica`,
data = base_final_grafico))
plot(residuos, col = "blue",
pch = 19,
main = "Plot resíduos",
)
ressemadm <- residuals(lm(`PIB per capita ouro branquense`~`Valor Adicionado - Industria de transformação`,
data = base_final_grafico))
plot(ressemadm, col = "red",
pch = 19,
main = "Plot resíduos",
)
#test rbeush pagan
bptest(modelofinal)
#Outro gráfico que talvêz seja melhor pro trabalho
plot(base_final_grafico$`Valor Adicionado - Industria de transformação`,base_final_grafico$`PIB per capita ouro branquense`+base_final_grafico$`Valor Adicionado - administração publica`,
cex = 1,
pch = 20,
main = "Teste Heterocedasticidade")
reg1 <- lm(`PIB per capita ouro branquense`~`Valor Adicionado - Industria de transformação`,
data = base_final_grafico)
reg2 <- lm(`PIB per capita ouro branquense`~`Valor Adicionado - administração publica` ,data = base_final_grafico)
abline(reg2,
col = "blue")
#teste de white---------
uhat <- modelofinal$residuals
uhat
uhat2 <- uhat^2
uhat.abs <- abs(uhat)
uhat.abs
m <- modelofinal
data <- base_final
#rotina do teste com base em m e data
u2 <- m$residuals^2
data <- data %>%
filter(`Valor Adicionado - Industria de transformação` != 0)
reg.auxiliar <- lm(u2 ~ `Valor Adicionado - Industria de transformação` +
I(`Valor Adicionado - Industria de transformação`^2) +
`Valor Adicionado - administração publica` +
I(`Valor Adicionado - administração publica`^2), data=data)  #Com termos cruzados, cross-terms
data <- data %>%
filter(`Valor Adicionado - Industria de transformação` != 0)
library(dplyr)
data <- data %>%
filter(`Valor Adicionado - Industria de transformação` != 0)
reg.auxiliar <- lm(u2 ~ `Valor Adicionado - Industria de transformação` +
I(`Valor Adicionado - Industria de transformação`^2) +
`Valor Adicionado - administração publica` +
I(`Valor Adicionado - administração publica`^2), data=data)  #Com termos cruzados, cross-terms
summary(reg.auxiliar)
Ru2 <- summary(reg.auxiliar)$r.squared
LM <- nrow(data) * Ru2
#numero de regressores menos o intercepto
k <- length(coefficients(reg.auxiliar)) - 1
k
p.value <- 1 - pchisq(LM, k)
c(LM, p.value)
regbp <- lm(`PIB per capita ouro branquense`~`Valor Adicionado - Industria de transformação` +`Valor Adicionado - administração publica`,
data = base_final_grafico)
bptest(regbp)
bptest(regbp)
#Colocando um do lado do outro
library(lmtest)
regbp <- lm(`PIB per capita ouro branquense`~`Valor Adicionado - Industria de transformação` +`Valor Adicionado - administração publica`,
data = base_final_grafico)
bptest(regbp)
summary(modelofinal)
#corrigindo a heterocedasticidade-----------
install.packages("sandwich")
library(sandwich)
vcov.white0 <- hccm(modelofinal, type = c("hc1"))
library(sandwich)
vcov.white0 <- hccm(modelofinal, type = c("hc1"))
library(car)
vcov.white0 <- hccm(modelofinal, type = c("hc1"))
coeftest(modelofinal, vcov.white0)
vcov.white0 <- hccm(modelofinal, type = c("hc1"))
vif(modelofinal)
# Padronizar variáveis
base_final$`Valor Adicionado - Industria de transformação` <- scale(base_final$`Valor Adicionado - Industria de transformação`)
base_final$`Valor Adicionado - administração publica` <- scale(base_final$`Valor Adicionado - administração publica`)
# Reajustar o modelo com variáveis padronizadas
modelofinal <- lm(`PIB per capita ouro branquense` ~ `Valor Adicionado - Industria de transformação` +
I(`Valor Adicionado - Industria de transformação`^2) +
`Valor Adicionado - administração publica` +
I(`Valor Adicionado - administração publica`^2), data = base_final)
vcov.white0 <- hccm(modelofinal, type = c("hc1"))
coeftest(modelofinal, vcov.white0)
coeficientes <- coeftest(modelofinal, vcov.white0)
mediaresiduos <- mean(residuals(modelofinal))
print(mediaresiduos)
# Não consigo roda o hccm pois o modelo de regressão tem variáveis altamente correlacionadas
# Resolveremos isso
vcov.white0 <- hccm(modelofinal, type = c("hc0"))
coeftest(modelofinal, vcov.white0)
vif(modelofinal)
# Padronizar variáveis
base_final$`Valor Adicionado - Industria de transformação` <- scale(base_final$`Valor Adicionado - Industria de transformação`)
base_final$`Valor Adicionado - administração publica` <- scale(base_final$`Valor Adicionado - administração publica`)
# Reajustar o modelo com variáveis padronizadas
modelofinal <- lm(`PIB per capita ouro branquense` ~ `Valor Adicionado - Industria de transformação` +
I(`Valor Adicionado - Industria de transformação`^2) +
`Valor Adicionado - administração publica` +
I(`Valor Adicionado - administração publica`^2), data = base_final)
vcov.white0 <- hccm(modelofinal, type = c("hc1"))
coeftest(modelofinal, vcov.white0)
coeficientes <- coeftest(modelofinal, vcov.white0)
mediaresiduos <- mean(residuals(modelofinal))
print(mediaresiduos)
summary(modelofinal)
coeficientes
print(mediaresiduos)
